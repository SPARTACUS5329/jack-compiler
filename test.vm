<keyword> class </keyword>
<identifier> Main </identifier>
<symbol> { </symbol>
<keyword> function </keyword>
<identifier> void </identifier>
<identifier> main </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<identifier> var </identifier>
<keyword> Array </keyword>
<identifier> a </identifier>
<symbol> ; </symbol>
<identifier> var </identifier>
<keyword> int </keyword>
<identifier> length </identifier>
<symbol> ; </symbol>
<identifier> var </identifier>
<keyword> int </keyword>
<keyword> i </keyword>
<symbol> , </symbol>
<identifier> sum </identifier>
<symbol> ; </symbol>
<identifier> let </identifier>
<identifier> length </identifier>
<symbol> = </symbol>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> readInt </identifier>
<symbol> ( </symbol>
<stringConstant> HOW MANY NUMBERS? </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<identifier> let </identifier>
<identifier> a </identifier>
<symbol> = </symbol>
<keyword> Array </keyword>
<symbol> . </symbol>
<identifier> new </identifier>
<symbol> ( </symbol>
<identifier> length </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<identifier> let </identifier>
<keyword> i </keyword>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<identifier> while </identifier>
<symbol> ( </symbol>
<keyword> i </keyword>
<symbol> < </symbol>
<identifier> length </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<identifier> let </identifier>
<identifier> a </identifier>
<symbol> [ </symbol>
<keyword> i </keyword>
<symbol> ] </symbol>
<symbol> = </symbol>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> readInt </identifier>
<symbol> ( </symbol>
<stringConstant>  ENTER THE NEXT NUMBER: </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<identifier> let </identifier>
<keyword> i </keyword>
<symbol> = </symbol>
<keyword> i </keyword>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<identifier> let </identifier>
<keyword> i </keyword>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<identifier> let </identifier>
<identifier> sum </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<identifier> while </identifier>
<symbol> ( </symbol>
<keyword> i </keyword>
<symbol> < </symbol>
<identifier> length </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<identifier> let </identifier>
<identifier> sum </identifier>
<symbol> = </symbol>
<identifier> sum </identifier>
<symbol> + </symbol>
<identifier> a </identifier>
<symbol> [ </symbol>
<keyword> i </keyword>
<symbol> ] </symbol>
<symbol> ; </symbol>
<identifier> let </identifier>
<keyword> i </keyword>
<symbol> = </symbol>
<keyword> i </keyword>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<identifier> do </identifier>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant> ÀTHE AVERAGE IS: </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<identifier> do </identifier>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printInt </identifier>
<symbol> ( </symbol>
<identifier> sum </identifier>
<symbol> / </symbol>
<identifier> length </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<identifier> do </identifier>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> println </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<identifier> return </identifier>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
